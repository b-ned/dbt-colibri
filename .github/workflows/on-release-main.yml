name: release-main

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Optional version to publish (overrides release tag)'
        required: false
        default: ''
jobs:

  set-version:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Determine version
        id: vars
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "tag=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            # Remove leading "v" from tag
            echo "tag=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "Error: No version provided and GITHUB_REF is not a tag: $GITHUB_REF"
            exit 1
          fi

      - name: Install uv
        run: pip install uv

      - name: Set version using uv
        run: uv version $RELEASE_VERSION
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}

      - name: Upload updated pyproject.toml
        uses: actions/upload-artifact@v4
        with:
          name: pyproject-toml
          path: pyproject.toml

  publish:
    runs-on: ubuntu-latest
    environment: RELEASE
    needs: [set-version]
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@v4
        with:
          name: pyproject-toml

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Build package
        run: uv build

      - name: Publish package to PyPI
        run: uv publish
        env:
          UV_PUBLISH_USERNAME: __token__
          UV_PUBLISH_PASSWORD: ${{ secrets.UV_PUBLISH_TOKEN }}

